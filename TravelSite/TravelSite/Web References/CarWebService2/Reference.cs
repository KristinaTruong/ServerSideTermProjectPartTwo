//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TravelSite.CarWebService2 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CarServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CarService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCustOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GiveCustomerATripIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCarTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgencyIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRentalCarAgenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCarsByAgencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindCarsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindCarByAgencyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CarService() {
            this.Url = global::TravelSite.Properties.Settings.Default.TravelSite_CarWebService2_CarService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event CheckCustCompletedEventHandler CheckCustCompleted;
        
        /// <remarks/>
        public event GetCitiesCompletedEventHandler GetCitiesCompleted;
        
        /// <remarks/>
        public event GiveCustomerATripIDCompletedEventHandler GiveCustomerATripIDCompleted;
        
        /// <remarks/>
        public event GetCustomerIDCompletedEventHandler GetCustomerIDCompleted;
        
        /// <remarks/>
        public event ReserveCompletedEventHandler ReserveCompleted;
        
        /// <remarks/>
        public event GetCarTypeCompletedEventHandler GetCarTypeCompleted;
        
        /// <remarks/>
        public event GetStatesCompletedEventHandler GetStatesCompleted;
        
        /// <remarks/>
        public event GetAgencyIDCompletedEventHandler GetAgencyIDCompleted;
        
        /// <remarks/>
        public event GetRentalCarAgenciesCompletedEventHandler GetRentalCarAgenciesCompleted;
        
        /// <remarks/>
        public event GetCarsByAgencyCompletedEventHandler GetCarsByAgencyCompleted;
        
        /// <remarks/>
        public event FindCarsCompletedEventHandler FindCarsCompleted;
        
        /// <remarks/>
        public event FindCarByAgencyCompletedEventHandler FindCarByAgencyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddUser(Customer myCustomer) {
            object[] results = this.Invoke("AddUser", new object[] {
                        myCustomer});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserAsync(Customer myCustomer) {
            this.AddUserAsync(myCustomer, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(Customer myCustomer, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        myCustomer}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckCust", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckCust(int id, string password) {
            object[] results = this.Invoke("CheckCust", new object[] {
                        id,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCustAsync(int id, string password) {
            this.CheckCustAsync(id, password, null);
        }
        
        /// <remarks/>
        public void CheckCustAsync(int id, string password, object userState) {
            if ((this.CheckCustOperationCompleted == null)) {
                this.CheckCustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCustOperationCompleted);
            }
            this.InvokeAsync("CheckCust", new object[] {
                        id,
                        password}, this.CheckCustOperationCompleted, userState);
        }
        
        private void OnCheckCustOperationCompleted(object arg) {
            if ((this.CheckCustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCustCompleted(this, new CheckCustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCities(string selectedState) {
            object[] results = this.Invoke("GetCities", new object[] {
                        selectedState});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCitiesAsync(string selectedState) {
            this.GetCitiesAsync(selectedState, null);
        }
        
        /// <remarks/>
        public void GetCitiesAsync(string selectedState, object userState) {
            if ((this.GetCitiesOperationCompleted == null)) {
                this.GetCitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCitiesOperationCompleted);
            }
            this.InvokeAsync("GetCities", new object[] {
                        selectedState}, this.GetCitiesOperationCompleted, userState);
        }
        
        private void OnGetCitiesOperationCompleted(object arg) {
            if ((this.GetCitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCitiesCompleted(this, new GetCitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GiveCustomerATripID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GiveCustomerATripID(int customerID) {
            this.Invoke("GiveCustomerATripID", new object[] {
                        customerID});
        }
        
        /// <remarks/>
        public void GiveCustomerATripIDAsync(int customerID) {
            this.GiveCustomerATripIDAsync(customerID, null);
        }
        
        /// <remarks/>
        public void GiveCustomerATripIDAsync(int customerID, object userState) {
            if ((this.GiveCustomerATripIDOperationCompleted == null)) {
                this.GiveCustomerATripIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGiveCustomerATripIDOperationCompleted);
            }
            this.InvokeAsync("GiveCustomerATripID", new object[] {
                        customerID}, this.GiveCustomerATripIDOperationCompleted, userState);
        }
        
        private void OnGiveCustomerATripIDOperationCompleted(object arg) {
            if ((this.GiveCustomerATripIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GiveCustomerATripIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCustomerID(Customer newCust) {
            object[] results = this.Invoke("GetCustomerID", new object[] {
                        newCust});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerIDAsync(Customer newCust) {
            this.GetCustomerIDAsync(newCust, null);
        }
        
        /// <remarks/>
        public void GetCustomerIDAsync(Customer newCust, object userState) {
            if ((this.GetCustomerIDOperationCompleted == null)) {
                this.GetCustomerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerIDOperationCompleted);
            }
            this.InvokeAsync("GetCustomerID", new object[] {
                        newCust}, this.GetCustomerIDOperationCompleted, userState);
        }
        
        private void OnGetCustomerIDOperationCompleted(object arg) {
            if ((this.GetCustomerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerIDCompleted(this, new GetCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Reserve", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Reserve(int agencyid, Car newCar, Customer newCust, int travelID, string travelPassword) {
            object[] results = this.Invoke("Reserve", new object[] {
                        agencyid,
                        newCar,
                        newCust,
                        travelID,
                        travelPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReserveAsync(int agencyid, Car newCar, Customer newCust, int travelID, string travelPassword) {
            this.ReserveAsync(agencyid, newCar, newCust, travelID, travelPassword, null);
        }
        
        /// <remarks/>
        public void ReserveAsync(int agencyid, Car newCar, Customer newCust, int travelID, string travelPassword, object userState) {
            if ((this.ReserveOperationCompleted == null)) {
                this.ReserveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveOperationCompleted);
            }
            this.InvokeAsync("Reserve", new object[] {
                        agencyid,
                        newCar,
                        newCust,
                        travelID,
                        travelPassword}, this.ReserveOperationCompleted, userState);
        }
        
        private void OnReserveOperationCompleted(object arg) {
            if ((this.ReserveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveCompleted(this, new ReserveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCarType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCarType() {
            object[] results = this.Invoke("GetCarType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCarTypeAsync() {
            this.GetCarTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetCarTypeAsync(object userState) {
            if ((this.GetCarTypeOperationCompleted == null)) {
                this.GetCarTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCarTypeOperationCompleted);
            }
            this.InvokeAsync("GetCarType", new object[0], this.GetCarTypeOperationCompleted, userState);
        }
        
        private void OnGetCarTypeOperationCompleted(object arg) {
            if ((this.GetCarTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCarTypeCompleted(this, new GetCarTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStates() {
            object[] results = this.Invoke("GetStates", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatesAsync() {
            this.GetStatesAsync(null);
        }
        
        /// <remarks/>
        public void GetStatesAsync(object userState) {
            if ((this.GetStatesOperationCompleted == null)) {
                this.GetStatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatesOperationCompleted);
            }
            this.InvokeAsync("GetStates", new object[0], this.GetStatesOperationCompleted, userState);
        }
        
        private void OnGetStatesOperationCompleted(object arg) {
            if ((this.GetStatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatesCompleted(this, new GetStatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAgencyID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAgencyID(string agency) {
            object[] results = this.Invoke("GetAgencyID", new object[] {
                        agency});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgencyIDAsync(string agency) {
            this.GetAgencyIDAsync(agency, null);
        }
        
        /// <remarks/>
        public void GetAgencyIDAsync(string agency, object userState) {
            if ((this.GetAgencyIDOperationCompleted == null)) {
                this.GetAgencyIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgencyIDOperationCompleted);
            }
            this.InvokeAsync("GetAgencyID", new object[] {
                        agency}, this.GetAgencyIDOperationCompleted, userState);
        }
        
        private void OnGetAgencyIDOperationCompleted(object arg) {
            if ((this.GetAgencyIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgencyIDCompleted(this, new GetAgencyIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRentalCarAgencies", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRentalCarAgencies(string city, string state) {
            object[] results = this.Invoke("GetRentalCarAgencies", new object[] {
                        city,
                        state});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRentalCarAgenciesAsync(string city, string state) {
            this.GetRentalCarAgenciesAsync(city, state, null);
        }
        
        /// <remarks/>
        public void GetRentalCarAgenciesAsync(string city, string state, object userState) {
            if ((this.GetRentalCarAgenciesOperationCompleted == null)) {
                this.GetRentalCarAgenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRentalCarAgenciesOperationCompleted);
            }
            this.InvokeAsync("GetRentalCarAgencies", new object[] {
                        city,
                        state}, this.GetRentalCarAgenciesOperationCompleted, userState);
        }
        
        private void OnGetRentalCarAgenciesOperationCompleted(object arg) {
            if ((this.GetRentalCarAgenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRentalCarAgenciesCompleted(this, new GetRentalCarAgenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCarsByAgency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCarsByAgency(int carAgencyID, string state, string city) {
            object[] results = this.Invoke("GetCarsByAgency", new object[] {
                        carAgencyID,
                        state,
                        city});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCarsByAgencyAsync(int carAgencyID, string state, string city) {
            this.GetCarsByAgencyAsync(carAgencyID, state, city, null);
        }
        
        /// <remarks/>
        public void GetCarsByAgencyAsync(int carAgencyID, string state, string city, object userState) {
            if ((this.GetCarsByAgencyOperationCompleted == null)) {
                this.GetCarsByAgencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCarsByAgencyOperationCompleted);
            }
            this.InvokeAsync("GetCarsByAgency", new object[] {
                        carAgencyID,
                        state,
                        city}, this.GetCarsByAgencyOperationCompleted, userState);
        }
        
        private void OnGetCarsByAgencyOperationCompleted(object arg) {
            if ((this.GetCarsByAgencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCarsByAgencyCompleted(this, new GetCarsByAgencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FindCars", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindCars(CarPerks myCar, string city, string state) {
            object[] results = this.Invoke("FindCars", new object[] {
                        myCar,
                        city,
                        state});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindCarsAsync(CarPerks myCar, string city, string state) {
            this.FindCarsAsync(myCar, city, state, null);
        }
        
        /// <remarks/>
        public void FindCarsAsync(CarPerks myCar, string city, string state, object userState) {
            if ((this.FindCarsOperationCompleted == null)) {
                this.FindCarsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindCarsOperationCompleted);
            }
            this.InvokeAsync("FindCars", new object[] {
                        myCar,
                        city,
                        state}, this.FindCarsOperationCompleted, userState);
        }
        
        private void OnFindCarsOperationCompleted(object arg) {
            if ((this.FindCarsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindCarsCompleted(this, new FindCarsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FindCarByAgency", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindCarByAgency(int agencyID, string state, string city, CarPerks perks) {
            object[] results = this.Invoke("FindCarByAgency", new object[] {
                        agencyID,
                        state,
                        city,
                        perks});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindCarByAgencyAsync(int agencyID, string state, string city, CarPerks perks) {
            this.FindCarByAgencyAsync(agencyID, state, city, perks, null);
        }
        
        /// <remarks/>
        public void FindCarByAgencyAsync(int agencyID, string state, string city, CarPerks perks, object userState) {
            if ((this.FindCarByAgencyOperationCompleted == null)) {
                this.FindCarByAgencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindCarByAgencyOperationCompleted);
            }
            this.InvokeAsync("FindCarByAgency", new object[] {
                        agencyID,
                        state,
                        city,
                        perks}, this.FindCarByAgencyOperationCompleted, userState);
        }
        
        private void OnFindCarByAgencyOperationCompleted(object arg) {
            if ((this.FindCarByAgencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindCarByAgencyCompleted(this, new FindCarByAgencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Customer {
        
        private int customerIDField;
        
        private string nameField;
        
        private string addressField;
        
        private string emailField;
        
        private float totalDollarSalesField;
        
        private int tripIDField;
        
        /// <remarks/>
        public int CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public float TotalDollarSales {
            get {
                return this.totalDollarSalesField;
            }
            set {
                this.totalDollarSalesField = value;
            }
        }
        
        /// <remarks/>
        public int TripID {
            get {
                return this.tripIDField;
            }
            set {
                this.tripIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CarPerks {
        
        private int perkIDField;
        
        private string[] perkNameField;
        
        /// <remarks/>
        public int PerkID {
            get {
                return this.perkIDField;
            }
            set {
                this.perkIDField = value;
            }
        }
        
        /// <remarks/>
        public string[] PerkName {
            get {
                return this.perkNameField;
            }
            set {
                this.perkNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Car {
        
        private int carAgencyIDField;
        
        private int carIDField;
        
        private string carMakeField;
        
        private string carModelField;
        
        private System.DateTime pickupdateField;
        
        private System.DateTime dropoffdateField;
        
        private decimal carcostField;
        
        private int carquantityField;
        
        private string carTypeField;
        
        private int carAgencyIDField1;
        
        private string cartypeField;
        
        private int carIDField1;
        
        private string carMakeField1;
        
        private string carModelField1;
        
        private System.DateTime pickupdateField1;
        
        private System.DateTime dropoffdateField1;
        
        private decimal carcostField1;
        
        private int carquantityField1;
        
        /// <remarks/>
        public int carAgencyID {
            get {
                return this.carAgencyIDField;
            }
            set {
                this.carAgencyIDField = value;
            }
        }
        
        /// <remarks/>
        public int carID {
            get {
                return this.carIDField;
            }
            set {
                this.carIDField = value;
            }
        }
        
        /// <remarks/>
        public string carMake {
            get {
                return this.carMakeField;
            }
            set {
                this.carMakeField = value;
            }
        }
        
        /// <remarks/>
        public string carModel {
            get {
                return this.carModelField;
            }
            set {
                this.carModelField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime pickupdate {
            get {
                return this.pickupdateField;
            }
            set {
                this.pickupdateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dropoffdate {
            get {
                return this.dropoffdateField;
            }
            set {
                this.dropoffdateField = value;
            }
        }
        
        /// <remarks/>
        public decimal carcost {
            get {
                return this.carcostField;
            }
            set {
                this.carcostField = value;
            }
        }
        
        /// <remarks/>
        public int carquantity {
            get {
                return this.carquantityField;
            }
            set {
                this.carquantityField = value;
            }
        }
        
        /// <remarks/>
        public string CarType {
            get {
                return this.carTypeField;
            }
            set {
                this.carTypeField = value;
            }
        }
        
        /// <remarks/>
        public int CarAgencyID {
            get {
                return this.carAgencyIDField1;
            }
            set {
                this.carAgencyIDField1 = value;
            }
        }
        
        /// <remarks/>
        public string cartype {
            get {
                return this.cartypeField;
            }
            set {
                this.cartypeField = value;
            }
        }
        
        /// <remarks/>
        public int CarID {
            get {
                return this.carIDField1;
            }
            set {
                this.carIDField1 = value;
            }
        }
        
        /// <remarks/>
        public string CarMake {
            get {
                return this.carMakeField1;
            }
            set {
                this.carMakeField1 = value;
            }
        }
        
        /// <remarks/>
        public string CarModel {
            get {
                return this.carModelField1;
            }
            set {
                this.carModelField1 = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Pickupdate {
            get {
                return this.pickupdateField1;
            }
            set {
                this.pickupdateField1 = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Dropoffdate {
            get {
                return this.dropoffdateField1;
            }
            set {
                this.dropoffdateField1 = value;
            }
        }
        
        /// <remarks/>
        public decimal Carcost {
            get {
                return this.carcostField1;
            }
            set {
                this.carcostField1 = value;
            }
        }
        
        /// <remarks/>
        public int Carquantity {
            get {
                return this.carquantityField1;
            }
            set {
                this.carquantityField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AddUserCompletedEventHandler(object sender, AddUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CheckCustCompletedEventHandler(object sender, CheckCustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCitiesCompletedEventHandler(object sender, GetCitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GiveCustomerATripIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCustomerIDCompletedEventHandler(object sender, GetCustomerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ReserveCompletedEventHandler(object sender, ReserveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCarTypeCompletedEventHandler(object sender, GetCarTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCarTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCarTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetStatesCompletedEventHandler(object sender, GetStatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAgencyIDCompletedEventHandler(object sender, GetAgencyIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgencyIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgencyIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetRentalCarAgenciesCompletedEventHandler(object sender, GetRentalCarAgenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRentalCarAgenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRentalCarAgenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCarsByAgencyCompletedEventHandler(object sender, GetCarsByAgencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCarsByAgencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCarsByAgencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FindCarsCompletedEventHandler(object sender, FindCarsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindCarsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindCarsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FindCarByAgencyCompletedEventHandler(object sender, FindCarByAgencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindCarByAgencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindCarByAgencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591